name: Flutter SDK Package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  analyze-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Analyze SDK code (with custom rules)
        run: |
          cat > analysis_options.yaml << 'EOF'
analyzer:
  errors:
    unused_import: ignore
    avoid_print: ignore
    deprecated_member_use: ignore
    
  exclude:
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "**/*.mocks.dart"
    - "**/generated/**"
    - "**/build/**"
    - "**/.dart_tool/**"

linter:
  rules:
    - always_declare_return_types
    - always_use_package_imports
    - avoid_empty_else
    - avoid_function_literals_in_foreach_calls
    - avoid_void_async
    - cancel_subscriptions
    - close_sinks
    - control_flow_in_finally
    - directives_ordering
    - empty_catches
    - empty_constructor_bodies
    - implementation_imports
    - invariant_booleans
    - iterable_contains_unrelated_type
    - list_remove_unrelated_type
    - literal_only_boolean_expressions
    - no_adjacent_strings_in_list
    - no_duplicate_case_values
    - no_runtimeType_toString
    - prefer_final_fields
    - prefer_final_in_for_each
    - prefer_foreach
    - prefer_if_null_operators
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_iterable_whereType
    - prefer_null_aware_operators
    - prefer_void_to_null
    - test_types_in_equals
    - throw_in_finally
    - unnecessary_await_in_return
    - unnecessary_brace_in_string_interps
    - unnecessary_const
    - unnecessary_getters_setters
    - unnecessary_new
    - unnecessary_null_checks
    - unnecessary_null_in_if_null_operators
    - unnecessary_overrides
    - unnecessary_parenthesis
    - unnecessary_raw_strings
    - unnecessary_statements
    - unnecessary_string_interpolations
    - unnecessary_this
    - unrelated_type_equality_checks
    - use_rethrow_when_possible
    - use_setters_to_change_properties
    - use_string_buffers
    - use_to_and_as_if_applicable
    - valid_regexps
EOF
          
          flutter analyze --fatal-warnings || echo "分析完成，有警告但继续流程"
        continue-on-error: true
      
      - name: Run SDK tests
        run: flutter test
      
      - name: Format code
        run: dart format --set-exit-if-changed .
      
      - name: Generate API documentation
        run: |
          dart pub global activate dartdoc 2>/dev/null || true
          dart doc . 2>/dev/null || echo "文档生成失败，但继续流程"
        continue-on-error: true
      
      - name: Upload documentation
        uses: actions/upload-artifact@v4
        with:
          name: api-docs
          path: doc/
        if: success() || failure()

  build-example:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      
      - name: Check if example directory exists
        id: check-example
        run: |
          if [ -d "example" ] && [ -f "example/pubspec.yaml" ]; then
            echo "has_example=true" >> $GITHUB_OUTPUT
          else
            echo "has_example=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Build example Android APK
        if: steps.check-example.outputs.has_example == 'true'
        run: |
          cd example
          flutter pub get
          flutter build apk --release --split-per-abi
      
      - name: Upload example APK artifacts
        if: steps.check-example.outputs.has_example == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: example-android-apks
          path: example/build/app/outputs/flutter-apk/
      
      - name: Build example Web app
        if: steps.check-example.outputs.has_example == 'true'
        run: |
          cd example
          flutter build web --release
      
      - name: Upload example Web build artifacts
        if: steps.check-example.outputs.has_example == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: example-web-build
          path: example/build/web/

  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      
      - name: Create release package
        run: |
          VERSION=$(grep 'version:' pubspec.yaml | awk '{print $2}')
          PACKAGE_NAME=$(grep 'name:' pubspec.yaml | awk '{print $2}')
          
          mkdir -p release
          
          cp -r lib release/
          cp pubspec.yaml release/
          cp README.md release/ 2>/dev/null || true
          cp LICENSE release/ 2>/dev/null || true
          cp CHANGELOG.md release/ 2>/dev/null || true
          
          cd release
          zip -r ../${PACKAGE_NAME}-${VERSION}.zip .
          cd ..
      
      - name: Upload release package
        uses: actions/upload-artifact@v4
        with:
          name: sdk-release
          path: "*.zip"