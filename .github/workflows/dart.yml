name: Flutter SDK Package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  # 分析和测试 SDK
  analyze-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Analyze SDK code
        run: flutter analyze --fatal-infos
      
      - name: Run SDK tests
        run: flutter test
      
      - name: Format code
        run: dart format --set-exit-if-changed .
      
      - name: Generate API documentation
        run: |
          # 安装 dartdoc 如果尚未安装
          dart pub global activate dartdoc
          dart doc .
      
      - name: Upload documentation
        uses: actions/upload-artifact@v4
        with:
          name: api-docs
          path: doc/

  # 构建示例应用（如果存在）
  build-example:
    runs-on: ubuntu-latest
    needs: analyze-and-test
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      
      - name: Check if example directory exists
        id: check-example
        run: |
          if [ -d "example" ]; then
            echo "has_example=true" >> $GITHUB_OUTPUT
          else
            echo "has_example=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Build example Android APK
        if: steps.check-example.outputs.has_example == 'true'
        run: |
          cd example
          flutter pub get
          flutter build apk --release --split-per-abi
      
      - name: Upload example APK artifacts
        if: steps.check-example.outputs.has_example == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: example-android-apks
          path: example/build/app/outputs/flutter-apk/
      
      - name: Build example Web app
        if: steps.check-example.outputs.has_example == 'true'
        run: |
          cd example
          flutter build web --release
      
      - name: Upload example Web build artifacts
        if: steps.check-example.outputs.has_example == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: example-web-build
          path: example/build/web/

  # 发布到 pub.dev (可选)
  publish:
    runs-on: ubuntu-latest
    needs: [analyze-and-test, build-example]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Check package validity
        run: flutter pub publish --dry-run
      
      - name: Publish to pub.dev
        run: |
          # 取消注释以下行以实际发布
          # flutter pub publish --token ${{ secrets.PUB_DEV_TOKEN }}
        env:
          PUB_DEV_TOKEN: ${{ secrets.PUB_DEV_TOKEN }}

  # 创建 ZIP 发布包
  create-release:
    runs-on: ubuntu-latest
    needs: [analyze-and-test, build-example]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      
      - name: Create release package
        run: |
          # 获取版本号
          VERSION=$(grep 'version:' pubspec.yaml | awk '{print $2}')
          PACKAGE_NAME=$(grep 'name:' pubspec.yaml | awk '{print $2}')
          
          # 创建发布目录
          mkdir -p release
          
          # 复制必要的文件
          cp -r lib release/
          cp pubspec.yaml release/
          cp README.md release/ 2>/dev/null || true
          cp LICENSE release/ 2>/dev/null || true
          cp CHANGELOG.md release/ 2>/dev/null || true
          
          # 创建 ZIP 包
          cd release
          zip -r ../${PACKAGE_NAME}-${VERSION}.zip .
          
          # 回到根目录
          cd ..
      
      - name: Upload release package
        uses: actions/upload-artifact@v4
        with:
          name: sdk-release
          path: "*.zip"